server {
    listen 80;
    server_name localhost;

    # Health check endpoint
    location /health {
        return 200 '{"status":"ok"}';
        add_header Content-Type application/json;
    }

    # Mock chat completions endpoint
    location /v1/chat/completions {
        add_header Content-Type application/json;
        return 200 '{
            "id": "chatcmpl-mock-$request_id",
            "object": "chat.completion",
            "created": 1677858242,
            "model": "gpt-4-turbo-preview",
            "usage": {
                "prompt_tokens": 13,
                "completion_tokens": 7,
                "total_tokens": 20
            },
            "choices": [
                {
                    "message": {
                        "role": "assistant",
                        "content": "This is a mock response from the AI service for testing purposes."
                    },
                    "finish_reason": "stop",
                    "index": 0
                }
            ]
        }';
    }

    # Mock models endpoint
    location /v1/models {
        add_header Content-Type application/json;
        return 200 '{
            "object": "list",
            "data": [
                {
                    "id": "gpt-4-turbo-preview",
                    "object": "model",
                    "created": 1677858242,
                    "owned_by": "openai"
                },
                {
                    "id": "gpt-3.5-turbo",
                    "object": "model",
                    "created": 1677858242,
                    "owned_by": "openai"
                }
            ]
        }';
    }

    # Default response
    location / {
        return 200 '{"service":"mock_openai"}';
        add_header Content-Type application/json;
    }
}