server {
    listen 80;
    server_name localhost;
    
    # Health check endpoint
    location /health {
        return 200 '{"status":"healthy","service":"n8n-mock"}';
        add_header Content-Type application/json;
    }
    
    # Root endpoint
    location / {
        return 200 '{"service":"N8N Mock Server","status":"OK"}';
        add_header Content-Type application/json;
    }
    
    # Mock webhook endpoint - handles all webhook paths
    location /webhook {
        access_log /var/log/nginx/webhook_access.log;
        error_log /var/log/nginx/webhook_error.log;
        
        # Log request body for debugging
        proxy_set_header X-Original-URI $request_uri;
        
        # Return workflow execution response
        return 200 '{
            "success": true,
            "message": "Webhook received and processed",
            "executionId": "mock_exec_$request_id",
            "workflowId": "mock_workflow_123",
            "timestamp": "$time_iso8601",
            "data": {
                "status": "success",
                "result": {
                    "message": "Workflow executed successfully",
                    "output": "Mock workflow output data"
                }
            }
        }';
        add_header Content-Type application/json;
        
        # Enable CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-API-Key";
    }
    
    # Mock workflow execution status endpoint
    location ~ ^/webhook-test/(.+)$ {
        return 200 '{
            "success": true,
            "executionId": "$1",
            "status": "completed",
            "startedAt": "$time_iso8601",
            "finishedAt": "$time_iso8601",
            "data": {
                "result": "Mock execution result"
            }
        }';
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin *;
    }
    
    # Handle OPTIONS requests for CORS
    location ~ ^/(webhook|webhook-test)/.*$ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-API-Key";
            add_header Access-Control-Max-Age 86400;
            return 204;
        }
    }
}