version: '3.8'

services:
  # Test Database
  postgres-test:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ai_orchestrator_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--auth-local=trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - ai-orchestrator-test
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_orchestrator_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  # Test Redis Cache
  redis-test:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ""
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    networks:
      - ai-orchestrator-test
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Mock N8N for Testing
  n8n-mock:
    image: nginx:alpine
    ports:
      - "5679:80"
    volumes:
      - ./tests/mocks/n8n:/usr/share/nginx/html:ro
      - ./tests/mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - ai-orchestrator-test
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  # API for Testing
  api-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    environment:
      - APP_ENV=test
      - APP_PORT=8080
      - APP_NAME=ai-orchestrator-api-test
      - APP_DEBUG=true
      
      # Test Database
      - DATABASE_URL=postgres://postgres:postgres@postgres-test:5432/ai_orchestrator_test?sslmode=disable
      - DB_MAX_CONNECTIONS=10
      - DB_MAX_IDLE_CONNECTIONS=2
      - DB_CONNECTION_LIFETIME_SECONDS=300
      
      # Test Redis
      - REDIS_URL=redis://redis-test:6379
      - REDIS_PASSWORD=
      - REDIS_MAX_RETRIES=3
      - REDIS_POOL_SIZE=5
      
      # Test Security
      - ENCRYPTION_KEY=test-encryption-key-32-chars-here
      - JWT_SECRET=test-jwt-secret-key-here-64-chars-long-for-testing-purposes
      - JWT_EXPIRY_HOURS=1
      - JWT_REFRESH_EXPIRY_DAYS=1
      
      # Test OpenAI (using environment or mock)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-test-key}
      - OPENAI_MODEL=gpt-3.5-turbo
      - OPENAI_MAX_TOKENS=1000
      - OPENAI_TEMPERATURE=0.7
      
      # Test OAuth
      - OAUTH_REDIRECT_BASE_URL=http://localhost:8080
      - OAUTH_SESSION_TIMEOUT_MINUTES=5
      
      # Test N8N
      - N8N_DEFAULT_TIMEOUT_SECONDS=10
      - N8N_MAX_RETRIES=2
      - N8N_WEBHOOK_BASE_URL=http://n8n-mock
      
      # Test Rate Limiting
      - RATE_LIMIT_ENABLED=false
      - RATE_LIMIT_REQUESTS_PER_MINUTE=1000
      - RATE_LIMIT_BURST=100
      
      # Test Logging
      - LOG_LEVEL=debug
      - LOG_FORMAT=json
      - LOG_OUTPUT=stdout
      
      # Test CORS
      - CORS_ALLOWED_ORIGINS=*
      - CORS_ALLOWED_METHODS=GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS
      - CORS_ALLOWED_HEADERS=*
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_MAX_AGE=300
      
      # Server
      - SERVER_READ_TIMEOUT_SECONDS=10
      - SERVER_WRITE_TIMEOUT_SECONDS=10
      - SERVER_IDLE_TIMEOUT_SECONDS=30
      - SERVER_MAX_HEADER_BYTES=1048576
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
      n8n-mock:
        condition: service_healthy
    networks:
      - ai-orchestrator-test
    restart: "no"
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        go run ./cmd/migrate up &&
        echo 'Starting API server...' &&
        go run ./cmd/simple-api
      "
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local

networks:
  ai-orchestrator-test:
    driver: bridge